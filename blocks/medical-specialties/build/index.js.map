{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./blocks/medical-specialties/src/edit.js","webpack:///./blocks/medical-specialties/src/editor.scss","webpack:///./blocks/medical-specialties/src/index.js","webpack:///./blocks/medical-specialties/src/use-post-terms.js","webpack:///./node_modules/classnames/index.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"coreData\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///external \"lodash\""],"names":["Edit","attributes","setAttributes","context","postType","postId","term","isInline","displayAcronym","textAlign","separator","TagName","toggleIsInline","toggleDisplayAcronym","availableTerms","useSelect","select","getTaxonomies","coreStore","taxonomies","per_page","availableTaxonomies","filter","taxonomy","includes","types","visibleTaxonomies","visibility","show_ui","selectableTerms","map","label","name","value","slug","selectedTerm","getTaxonomy","publicly_queryable","postTerms","hasPostTerms","isLoading","usePostTerms","hasPost","meta","setMeta","useEntityProp","blockProps","useBlockProps","className","classnames","__","newTerm","nextAlign","nextValue","postTerm","id","link","event","preventDefault","reduce","prev","curr","trim","labels","no_terms","registerBlockType","edit","rest_base","restBase","termIds","visible","_isLoading","length","getEntityRecords","isResolving","taxonomyArgs","include","terms"],"mappings":";;;;;;;;;;;;;;;;;;;QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA;QACA,gBAAgB,uBAAuB;QACvC;;;QAGA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAMA;AAUA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACgB,SAASA,IAAT,OAIZ;AAAA;;AAAA,MAJ2B;AAC9BC,cAD8B;AAE3BC,iBAF2B;AAG9BC,WAAO,EAAE;AAAEC,cAAF;AAAYC;AAAZ;AAHqB,GAI3B;AACH,QAAM;AAAEC,QAAF;AAAQC,YAAR;AAAkBC,kBAAlB;A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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp_cjd_services\"] = window[\"webpackJsonp_cjd_services\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./blocks/medical-specialties/src/index.js\",\"style-index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { filter, identity, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentToolbar,\n\tInspectorControls,\n\tBlockControls,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { \n    CheckboxControl, \n    Panel, \n    PanelBody, \n    Placeholder, \n    SelectControl, \n    Spinner, \n    TextControl, \n    ToggleControl\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { useSelect, getEntityRecords } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore, useEntityProp, getTaxonomy } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport usePostTerms from './use-post-terms';\nimport './editor.scss'; \n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\n export default function Edit( {\n\tattributes,\n    setAttributes,\n\tcontext: { postType, postId }\n} ) {\n\tconst { term, isInline, displayAcronym, textAlign, separator } = attributes;\n    const TagName = isInline ? 'p' : 'ul';\n\n    const toggleIsInline = () => {\n        setAttributes( { \n            isInline: ! isInline,\n        } );\n    };\n\n    const toggleDisplayAcronym = () => {\n        setAttributes( {\n            displayAcronym: ! displayAcronym,\n        } );\n    };\n\n    const availableTerms = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getTaxonomies } = select( coreStore );\n\t\t\tconst taxonomies = getTaxonomies( { per_page: -1 } );\n            const availableTaxonomies = filter( taxonomies, ( taxonomy ) =>\n                includes( taxonomy.types, postType )\n            );\n            const visibleTaxonomies = filter(\n                availableTaxonomies,\n                ( taxonomy ) => taxonomy.visibility.show_ui\n            );\n\n            const selectableTerms = visibleTaxonomies.map( ( term ) => ( { label: term.name, value: term.slug } ) );\n\t\t\treturn selectableTerms ? selectableTerms : {};\n\t\t}\n\t);\n\n\tconst selectedTerm = useSelect(\n\t\t( select ) => {\n            if ( ! term ) return {};\n\t\t\tconst { getTaxonomy } = select( coreStore );\n\t\t\tconst taxonomy = getTaxonomy( term );\n\t\t\treturn taxonomy?.visibility?.publicly_queryable ? taxonomy : {};\n\t\t}, [ term ]\n\t);\n\n\tconst { postTerms, hasPostTerms, isLoading } = usePostTerms( {\n\t\tpostId,\n\t\tpostType,\n\t\tterm: selectedTerm,\n\t} );\n\n\tconst hasPost = postId && postType;\n\tconst [ meta, setMeta ] = useEntityProp( 'taxonomy', term, 'meta' );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t[ `taxonomy-${ term }` ]: term,\n\t\t} ),\n\t} );\n\n\tif ( ! hasPost || ! term  ) {\n\t\treturn ( \n            <div { ...blockProps }>\n                { availableTerms ? (\n                    <Placeholder \n                        label={ __( 'Select a taxonomy to list for this post' ) }\n                    >\n                        <SelectControl\n                            label={ __( 'Taxonomy' ) }\n                            value={ term }\n                            options={ availableTerms }\n                            onChange={ ( newTerm ) => {\n                                setAttributes( { term: newTerm } );\n                            } }\n                        />\n                    </Placeholder>\n                ) : (\n                    __( 'This page or post type does not support the Post Meta block.' )\n                ) }\n            </div>\n        );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n            <InspectorControls>\n                <Panel>\n                    <PanelBody title={ __( 'Term Settings' ) }>\n                        <SelectControl\n                            label={ __( 'Taxonomy' ) }\n                            value={ term }\n                            options={ availableTerms }\n                            onChange={ ( newTerm ) => {\n                                setAttributes( { term: newTerm } );\n                            } }\n                        />\n                        <ToggleControl \n                            label={ __( 'Display inline' ) }\n                            checked={ isInline }\n                            onChange={ toggleIsInline }\n                        />\n                        { isInline && (\n                        <TextControl\n                            autoComplete=\"off\"\n                            label={ __( 'Separator' ) }\n                            value={ separator || '' }\n                            onChange={ ( nextValue ) => {\n                        \t    setAttributes( { separator: nextValue } );\n                            } }\n                            help={ __( 'Enter character(s) used to separate terms.' ) }\n                        />\n                        ) }\n                        <ToggleControl\n                            label={ __( 'Display Acronym' ) }\n                            checked={ displayAcronym }\n                            onChange={ toggleDisplayAcronym }\n                            help={ __( 'Display an acronym if available.' ) }\n                        />\n                    </PanelBody>\n                </Panel>\n\t\t\t</InspectorControls>\n\t\t\t<TagName { ...blockProps }>\n\t\t\t\t{ isLoading && <Spinner /> }\n\t\t\t\t{ ! isLoading &&\n\t\t\t\t\thasPostTerms &&\n                    isInline &&\n\t\t\t\t\tpostTerms\n\t\t\t\t\t\t.map( ( postTerm ) => (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tkey={ postTerm.id }\n\t\t\t\t\t\t\t\thref={ postTerm.link }\n\t\t\t\t\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ displayAcronym && postTerm.meta['acronym'] ? postTerm.meta['acronym'] : postTerm.name }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) )\n\t\t\t\t\t\t.reduce( ( prev, curr ) => (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{ prev }\n                                { separator.trim() !== ',' && separator.trim() !== ';' && ` `}\n\t\t\t\t\t\t\t\t<span className=\"wp-block-post-terms__separator\">\n                                    { separator.trim() }\n                                </span>\n                                { ` ` }\n\t\t\t\t\t\t\t\t{ curr }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) ) }\n                { ! isLoading &&\n\t\t\t\t\thasPostTerms &&\n                  ! isInline &&\n\t\t\t\t\tpostTerms\n\t\t\t\t\t\t.map( ( postTerm ) => (\n                            <li key={ postTerm.id }>\n                                <a\n                                    href={ postTerm.link }\n                                    onClick={ ( event ) => event.preventDefault() }\n                                >\n                                    { displayAcronym && postTerm.meta['acronym'] ? postTerm.meta['acronym'] : postTerm.name }\n                                </a>\n                            </li>\n\t\t\t\t\t\t) )\n\t\t\t\t\t\t}\n\t\t\t\t{ ! isLoading &&\n\t\t\t\t\t! hasPostTerms &&\n\t\t\t\t\t( selectedTerm?.labels?.no_terms ||\n\t\t\t\t\t\t__( 'Term items not found.' ) ) }\n\t\t\t</TagName>\n\t\t</>\n\t);\n}","// extracted by mini-css-extract-plugin\nexport {};","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport Edit from './edit';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( 'cjd-blocks/medical-specialties', {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t\n} );\n","/**\n * WordPress dependencies\n */\nimport { useEntityProp, store as coreStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\n\nexport default function usePostTerms( { postId, postType, term } ) {\n\tconst { rest_base: restBase, slug } = term;\n\tconst [ termIds ] = useEntityProp( 'postType', postType, restBase, postId );\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst visible = term?.visibility?.publicly_queryable;\n\t\t\tif ( ! visible ) {\n\t\t\t\treturn {\n\t\t\t\t\tpostTerms: [],\n\t\t\t\t\t_isLoading: false,\n\t\t\t\t\thasPostTerms: false,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif ( ! termIds ) {\n\t\t\t\t// Waiting for post terms to be fetched.\n\t\t\t\treturn { isLoading: term?.postTerms?.includes( postType ) };\n\t\t\t}\n\t\t\tif ( ! termIds.length ) {\n\t\t\t\treturn { isLoading: false };\n\t\t\t}\n\t\t\tconst { getEntityRecords, isResolving } = select( coreStore );\n\t\t\tconst taxonomyArgs = [\n\t\t\t\t'taxonomy',\n\t\t\t\tslug,\n\t\t\t\t{\n\t\t\t\t\tinclude: termIds,\n\t\t\t\t\tcontext: 'view',\n\t\t\t\t},\n\t\t\t];\n\t\t\tconst terms = getEntityRecords( ...taxonomyArgs );\n\t\t\tconst _isLoading = isResolving( 'getEntityRecords', taxonomyArgs );\n\t\t\treturn {\n\t\t\t\tpostTerms: terms,\n\t\t\t\tisLoading: _isLoading,\n\t\t\t\thasPostTerms: !! terms?.length,\n\t\t\t};\n\t\t},\n\t\t[ termIds, term?.visibility?.publicly_queryable ]\n\t);\n}","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"coreData\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","(function() { module.exports = window[\"lodash\"]; }());"],"sourceRoot":""}